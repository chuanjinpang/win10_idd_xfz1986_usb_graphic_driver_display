name: Build

on: [pull_request, push, repository_dispatch]

jobs:
  # Unit testing with Ceedling
  unit-test:
    runs-on: ubuntu-latest
    steps:
    - name: Setup Ruby
      uses: actions/setup-ruby@v1

    - name: Checkout TinyUSB
      uses: actions/checkout@v2

    - name: Unit Tests
      run: |
        # Install Ceedling
        gem install ceedling
        cd test
        ceedling test:all

  # Build most of the ports
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        example:
        - 'device/audio_test'
        - 'device/board_test'
        - 'device/cdc_dual_ports'
        - 'device/cdc_msc'
        - 'device/cdc_msc_freertos'
        - 'device/dfu_rt'
        - 'device/hid_composite'
        - 'device/hid_composite_freertos'
        - 'device/hid_generic_inout'
        - 'device/hid_multiple_interface'
        - 'device/midi_test'
        - 'device/msc_dual_lun'
        - 'device/net_lwip_webserver'
        - 'device/usbtmc'
        - 'device/webusb_serial'
        - 'host/cdc_msc_hid'

    steps:
    - name: Setup Python
      uses: actions/setup-python@v1

    - name: Setup Node.js
      uses: actions/setup-node@v1

    - name: Cache MSP430 Toolchain
      id: cache-msp430
      uses: actions/cache@v1
      with:
        path: /tmp/dl/
        # Increment gcc version number at end when updating downloads
        key: msp430-${{ runner.os }}-9.2.0.50

    - name: Install Toolchains
      env:
        MSP430GCC_URL: http://software-dl.ti.com/msp430/msp430_public_sw/mcu/msp430/MSPGCC/9_2_0_0/export/msp430-gcc-9.2.0.50_linux64.tar.bz2
      run: |
        # ARM & RISC-V GCC from xpack
        npm install --global xpm
        xpm install --global @xpack-dev-tools/arm-none-eabi-gcc@latest
        xpm install --global @xpack-dev-tools/riscv-none-embed-gcc@latest
        echo `echo $HOME/opt/xPacks/@xpack-dev-tools/arm-none-eabi-gcc/*/.content/bin` >> $GITHUB_PATH
        echo `echo $HOME/opt/xPacks/@xpack-dev-tools/riscv-none-embed-gcc/*/.content/bin` >> $GITHUB_PATH

        # TI MSP430 GCC
        mkdir -p /tmp/dl/
        [ -f "/tmp/dl/msp430-gcc.tar.bz2" ] || wget --progress=dot:mega $MSP430GCC_URL -O /tmp/dl/msp430-gcc.tar.bz2
        tar -C $HOME -xaf /tmp/dl/msp430-gcc.tar.bz2
        echo `echo $HOME/msp430-gcc-*_linux64/bin` >> $GITHUB_PATH

    - name: Checkout TinyUSB
      uses: actions/checkout@v2
      with:
        # Cannot do submodule checkout here since LWIP's git server cannot checkout unadventised commits (it must use tags)
        submodules: 'false'

    - name: Checkout Submodules
      run: |
        git submodule sync --recursive
        # Special case LWIP since GNU's Savannah can't do shallow checkout of non-tagged commits
        git submodule update --init --recursive lib/lwip
        git submodule update --init --recursive --depth 1

    - name: Build
      run: |
        python3 tools/build_all.py ${{ matrix.example }}

  # Build ESP32S
  build-esp32s:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        example: ['board_test', 'cdc_msc_freertos', 'hid_composite_freertos']

    steps:
    - name: Setup Python
      uses: actions/setup-python@v1

    - name: Pull ESP-IDF docker
      run: docker pull espressif/idf:latest

    - name: Checkout TinyUSB
      uses: actions/checkout@v2
      with:
        submodules: 'false'

    - name: Build
      run: docker run --rm -v $PWD:/project -w /project espressif/idf:latest python3 tools/build_esp32s.py ${{ matrix.example }}
